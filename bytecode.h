/*
 *  bytecode.h
 *  dang
 *
 *  Created by Ellie on 3/10/10.
 *  Copyright 2010 Ellie. All rights reserved.
 *
 */

#ifndef BYTECODE_H
#define BYTECODE_H

#include <stdint.h>

#include "data_stack.h"
#include "return_stack.h"

typedef int(*instruction_func)(const uint8_t *, size_t, data_stack_t **, return_stack_t *);
extern const instruction_func instruction_table[];

typedef enum instruction_t {
    i__MIN = 0,
    iEND = 0,
    iNOOP = 1,
    iDROP,
    iSWAP,
    iDUP,
    iBRANCH,
    i0BRANCH,
    iINTLIT,
    iINTADD,
    iINTSUBT,
    iINTMULT,
    iINTDIV,
    iINTMOD,
    
//    iOVER,
//    iTUCK,
//    iPICK,
//    iROLL,
//    iROT,
//    iTOR,
//    i2DROP,
//    iNDROP,
//    i2DUP,
//    iNDUP,
//    i2SWAP,
//    iDUPIFNE0,
//    iINCR,
//    iDECR,
//    iADD,
//    iSUBT,
//    iMULT,
//    iDIV,
//    iMOD,
//    iCMPE,
//    iCMPNE,
//    iCMPLT,
//    iCMPGT,
//    iCMPLTE,
//    iCMPGTE,
//    iCMPE0,
//    iCMPNE0,
//    iCMPLT0,
//    iCMPGT0,
//    iCMPLTE0,
//    iCMPGTE0,
//    iBAND,
//    iBOR,
//    iBXOR,
//    iBINV,
//    !,
//    @,
//    +!,
//    -!,
//    C!,
//    C@,
//    C@C!,
//    CMOVE,
//    ALLOT,
//    >R,
//    2>R,
//    R>,
//    2R>,
//    R@,
//    2R@,
//    R1+,
//    R1-,
//    >CTRL,
//    2>CTRL,
//    CTRL>,
//    2CTRL>,
//    CTRL@,
//    2CTRL@,
//    ASSERT,
//    .S,
//    KEY,
//    EMIT,
//    WORD,
//    NUMBER,
//    U.R,
//    .R,
//    FIND,
//    DE>CFA,
//    DE>DFA,
//    DE>NAME,
//    DFA>DE,
//    DFA>CFA,
//    CREATE,
//    ,,
//    [,
//    ],
//    :,
//    ;,
//    IMMEDIATE,
//    COMPILE-ONLY,
//    HIDDEN,
//    HIDE,
//    ',
//    BRANCH,
//    0BRANCH,
//    LITSTRING,
//    TELL,
//    UGROW,
//    UGROWN,
//    USHRINK,
//    QUIT,
//    ABORT,
//    breakpoint,
//    CELLS,
//    /CELLS,
//    EXECUTE,
//    POSTPONE,
//    THROW,
//    CATCH,
    
    i__MAX,
} instruction_t;

#endif
