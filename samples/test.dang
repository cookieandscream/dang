inttest:
        str  "testing integers:"
        byte    10
        stdout
        outl
        str  "addition: "
        stdout
        out
        int  0
.t1:    dup
        int  10
        subt
        jmp0 ~.b1
        int  1
        add
        dup
        stdout
        out
        str  ", "
        stdout
        out
        jmp  ~.t1
.b1:    str  "\n"
        stdout
        out
        str  "subtraction: "
        stdout
        out
.t2:    dup
        jmp0 ~.b2
        int  1
        subt
        dup
        stdout
        out
        str  ", "
        stdout
        out
        jmp  ~.t2
.b2:    str "\n"
        stdout
        out
        str  "multiplication: "
        stdout
        out
        int  5
        dup
        stdout
        out
        str  "x"
        stdout
        out
        int  4
        dup
        stdout
        out
        mult
        str  "="
        stdout
        out
        byte    10
        stdout
        outl
        str  "division: "
        stdout
        out
        int 20
        dup
        stdout
        out
        str "/"
        stdout
        out
        int 4
        dup
        stdout
        out
        div
        str "="
        stdout
        out
        byte    10
        stdout
        outl
        str "modulus: "
        stdout
        out
        int 20
        dup
        stdout
        out
        str "%"
        stdout
        out
        int 3
        dup
        stdout
        out
        mod
        str "="
        stdout
        out
        byte    10
        stdout
        outl
        str "increment: "
        stdout
        out
        int 0
        dup
        stdout
        out
        incr
        str "->"
        stdout
        out
        byte    10
        stdout
        outl
        str "decrement: "
        stdout
        out
        int 0
        dup
        stdout
        out
        decr
        str "->"
        stdout
        out
        byte    10
        stdout
        outl
        str "102 > 0 ? "
        stdout
        out
        int 102
        gt0
        byte    10
        stdout
        outl
        str "-123 > 0 ? "
        stdout
        out
        int 0
        int 123
        subt
        gt0
        byte    10
        stdout
        outl
        str "0 > 0 ? "
        stdout
        out
        int 0
        gt0
        byte    10
        stdout
        outl
        str "123 < 0 ? "
        stdout
        out
        int 123
        lt0
        byte    10
        stdout
        outl
        str "-123 < 0 ? "
        stdout
        out
        int 0
        int 123
        subt
        lt0
        byte    10
        stdout
        outl
        str "0 < 0 ? "
        stdout
        out
        int 0
        lt0
        byte    10
        stdout
        outl
        return
        

logictest:
        str "logic tests:"
        byte    10
        stdout
        outl
        str "1 and 1: "
        stdout
        out
        int 1
        dup
        and
        byte    10
        stdout
        outl
        str "1 and 0: "
        stdout
        out
        int 1
        int 0
        and
        byte    10
        stdout
        outl
        str "0 and 1: "
        stdout
        out
        int 0
        int 1
        and
        byte    10
        stdout
        outl
        str "0 and 0: "
        stdout
        out
        int 0
        dup
        and
        byte    10
        stdout
        outl
        str "1 or 1: "
        stdout
        out
        int 1
        dup
        or
        byte    10
        stdout
        outl
        str "1 or 0: "
        stdout
        out
        int 1
        int 0
        or
        byte    10
        stdout
        outl
        str "0 or 1: "
        stdout
        out
        int 0
        int 1
        or
        byte    10
        stdout
        outl
        str "0 or 0: "
        stdout
        out
        int 0
        dup
        or
        byte    10
        stdout
        outl
        str "1 xor 1: "
        stdout
        out
        int 1
        dup
        xor
        byte    10
        stdout
        outl
        str "1 xor 0: "
        stdout
        out
        int 1
        int 0
        xor
        byte    10
        stdout
        outl
        str "0 xor 1: "
        stdout
        out
        int 0
        int 1
        xor
        byte    10
        stdout
        outl
        str "0 xor 0: "
        stdout
        out
        int 0
        dup
        xor
        byte    10
        stdout
        outl



sheep:  
        str "hello world "
        float 1.0
.top:   dup
        float 0.5
        addf
        addf
        swap
        byte   2
        cat
        return
main:
        int  10
.top:   dup
        byte    10
        stdout
        outl
        dup
        jmp0 ~.bottom
        int  1
        subt
        jmp  ~.top
.bottom: drop
        call &sheep
        byte    10
        stdout
        outl
        undef
        symdef  1, 999
        symdef  0, 14
#        str "first symfind... "
#        out
#        symfind 999
#        str "ok"
#        outl
        int 1037
        swap
        srwrite
        call &sheep
        str "second symfind... "
        stdout
        out
        symfind 999
        str "ok"
        byte    10
        stdout
        outl
        srread
        str "read value: "
        stdout
        out
        byte    10
        stdout
        outl
        str "multi ref symfind... "
        stdout
        out
        symfind 14
        str "ok"
        byte    10
        stdout
        outl
        srread
        str "read value: "
        stdout
        out
        byte    10
        stdout
        outl
        symundef 999
        str "third symfind... "
        stdout
        out
        symfind 999
        str "ok"
        byte    10
        stdout
        outl
        jmp0 ~.else
        str "symbol is still defined"
        byte    10
        stdout
        outl
        jmp0 ~.endif
.else:  str "symbol is no longer defined"
        byte    10
        stdout
        outl
.endif: 
        str "enter a value followed by enter: "
        stdout
        out
        byte    '\n'
        stdin
        inl
        str "you entered: "
        byte    10
        stdout
        outl
        byte    10
        stdout
        outl
        call    &inttest
        call    &logictest
        str "function literal: "
        stdout
        out
        funlit &sheep
        dup
        byte    10
        stdout
        outl
        frcall
        byte    10
        stdout
        outl
        return
