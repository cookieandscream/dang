; fibonacci sequence
; 101 - input
; 102 - control
main:
        undef
        symdef  0x04, 101
        undef
        symdef  0x04, 102
        byte    2
        coro    &fib
.top:   
        strlit  "main: about to read from input channel\n"
        stdout
        out
        symfind 101
        crread
        dup
        byte    10
        stdout
        outl
;        strlit  ", "
;        out
        intlit  500
        intsubt
        intgt0
        jmp0 ~.top
        strlit  "main: about to write to control channel\n"
        stdout
        out
        byte    1
        symfind 102
        crwrite
.clean: 
        strlit "main: waiting for channel data to end...\n"
        stdout
        out
        symfind 101
        crtryrd
;        dup
;        byte    10
;        stdout
;        outl
        not
        jmp0 ~.clean
        return


; ( output control -- )
; 1001  - output 
; 1002  - control
fib:
        symdef  0x00, 1002
        drop
        symdef  0x00, 1001
        byte    1
        dup
        symfind 1001
        over
        over
        over
        swap
        strlit  "fib: about to write to output channel\n"
        stdout
        out
        crwrite
        swap
        strlit  "fib: about to write to output channel\n"
        stdout
        out
        crwrite
.top:   swap
        over
        intadd
        dup
        strlit  "fib: about to write to output channel\n"
        stdout
        out
        symfind 1001 
        crwrite
        strlit  "fib: about to tryread from control channel\n"
        stdout
        out
        symfind 1002
        crtryrd
        jmp0 ~.top
;        jmp  ~.top
    
.bot:   
        strlit  "fib: finished, about to return\n"
        stdout
        out
        return



